---
title: "Cleaning & Wrangling"
author: "Brooke"
format: html
---

## Background



## Traits & Objectives

-   Relative Growth Rate
-   Photosynthetic Rate
-   Leaf Mass Area
-   Leaf Area
-   WUE 
-   Height
-   Leaf Nitrogen
-   Date of first flower
-   Mid season biomass
-   Root biomass
-   Root:shoot ratio
-   Root diameter
-   Specific root length
-   Root nitrogen


## Setup

```{r}
#| message: false
#| warning: false
#| echo: false
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(viridis)
library(lme4)
library(LeafArea)
#install.packages("naniar")
library(naniar)
```

## Relative Growth Rate

### Clean up dataset

```{r}
readin <- read_csv("RGR_2024.csv")

rgr <- readin
plots <- read_csv("Plot_info.csv")
rgr <- rgr %>% 
  select(
    Recorder,
    Date,
    Month,
    Plant_ID,
    Height_cm,
    Canopy_x_cm,
    Canopy_y_cm
  ) %>% 
  replace_with_na(replace = list(Height_cm = "N/A",
                                 Canopy_x_cm = "N/A",
                                 Canopy_y_cm = "N/A")) %>% 
  mutate(Height_cm = as.numeric(Height_cm),
         Canopy_x_cm = as.numeric(Canopy_x_cm),
         Canopy_y_cm = as.numeric(Canopy_y_cm))
str(rgr)
which(rgr$Canopy_x_cm == "N/A")

# Extract species code from ID
deconstruct <- function(name) {
  starts_with_23 <- substring(name,1,2) == "23"
  
  Age <- ifelse(starts_with_23,2,1)
  Sp_Code <- ifelse(starts_with_23,
                    substring(name,7,12),
                    substring(name,4,9))
  Plot <- ifelse(starts_with_23,
                 substring(name,4,5),
                 substring(name,1,2))
  out_df <- data.frame(Plant_ID = name, Age, Sp_Code,Plot, stringsAsFactors = FALSE)
  return(out_df)
}
out <- deconstruct(unique(rgr$Plant_ID))
unique(out$Plot)
str(out)
str(rgr)

# Extract plot, shelter letter from ID, add in block and population
rgr2 <- inner_join(rgr,out, by=join_by(Plant_ID)) 
rgr3 <- inner_join(rgr2,plots, by=join_by(Plot)) 

unique(rgr3$Sp_Code)

unique(rgr3$Shelter)

unique(rgr3$Plot)

# Find gaps, investigate

incomplete_rows <- rgr3[,c("Plant_ID","Month","Height_cm","Canopy_x_cm","Canopy_y_cm")]
incomplete_rows_2 <- incomplete_rows[!complete.cases(incomplete_rows),]
incomplete_rows_2 <- incomplete_rows_2[rowSums(is.na(incomplete_rows_2)) < 3,] # 3 for the three measurements -- if there are any rows with Height but not canopy, for example

# Investigate three odd balls

# Find and investigate outliers
# Good job for interns
# Find average and standard deviation for each species, each growth variable (make area first), per population per month
str(rgr3)
rgr3$area <- rgr3$Canopy_x_cm*rgr3$Canopy_y_cm

str(rgr3)

rgr_avgs <- rgr3 %>% 
  group_by(Sp_Code,
           Month,
           Treatment,
           Population,
           Age) %>% 
  mutate(ht_avg = mean(Height_cm, na.rm = TRUE),
            ht_sd = sd(Height_cm, na.rm = TRUE),
            area_avg = mean(area, na.rm = TRUE),
            area_sd = sd(area, na.rm = TRUE),
            x_avg = mean(Canopy_x_cm, na.rm = TRUE),
            x_sd = sd(Canopy_x_cm, na.rm = TRUE),
            y_avg = mean(Canopy_y_cm, na.rm = TRUE),
            y_sd = sd(Canopy_y_cm, na.rm = TRUE)) %>% 
  select(Plant_ID,
         Sp_Code,
         Month,
         Age,
         Treatment,
         Population,
         Height_cm,
         ht_avg,
         ht_sd,
         area,
         area_avg,
         area_sd,
         Canopy_x_cm,
         Canopy_y_cm,
         x_avg,
         x_sd,
         y_avg,
         y_sd)

rgr_avgs <- rgr_avgs[complete.cases(rgr_avgs),]

rgr_avgs <- rgr_avgs %>% 
  mutate(ht_max = ht_avg + 3*ht_sd,
         ht_min = ht_avg - 3*ht_sd,
         area_max = area_avg + 3*area_sd,
         area_min = area_avg - 3*area_sd,
         x_max = x_avg + 3*x_sd,
         x_min = x_avg - 3*x_sd,
         y_max = y_avg + 3*y_sd,
         y_min = y_avg - 3*y_sd)

ht_outliers <-rgr_avgs[which(rgr_avgs$Height_cm > rgr_avgs$ht_max | rgr_avgs$Height_cm < rgr_avgs$ht_min),c("Plant_ID","Sp_Code","Month","Population", "Treatment", "Height_cm","ht_avg","ht_sd","ht_min","ht_max")]

area_outliers <- rgr_avgs[which(rgr_avgs$area > rgr_avgs$area_max | rgr_avgs$area < rgr_avgs$area_min),c("Plant_ID","Sp_Code","Month","Population", "Treatment", "area","area_avg","area_sd","area_min","area_max")]

x_outliers <- rgr_avgs[which(rgr_avgs$Canopy_x_cm > rgr_avgs$x_max | rgr_avgs$Canopy_x_cm < rgr_avgs$x_min),c("Plant_ID","Sp_Code","Month","Population", "Treatment", "Canopy_x_cm","x_avg","x_sd","x_min","x_max")]

y_outliers <- rgr_avgs[which(rgr_avgs$Canopy_y_cm > rgr_avgs$y_max | rgr_avgs$Canopy_y_cm < rgr_avgs$y_min),c("Plant_ID","Sp_Code","Month","Population", "Treatment", "Canopy_y_cm","y_avg","y_sd","y_min","y_max")]

## No outliers for 3 SD from mean, investigate blanks
```

### Create variables

```{r}
# Calculate canopy volume (height x canopy area)
head(rgr3)
rgr3$volume <- rgr3$Height_cm*rgr3$Canopy_x_cm*rgr3$Canopy_y_cm
rgr3$Date <- as.Date(rgr3$Date, tryFormats = "%m/%d/%y")
str(rgr3)

# Separate by metric

rgr_h_wide <- rgr3 %>% 
  select(Plant_ID,
         Date,
         Month,
         Height_cm) %>% 
  filter(!is.na(Height_cm)) %>%
  pivot_wider(id_cols = Plant_ID,
              names_from = Month,
              values_from = c(Date, Height_cm)) %>% 
  mutate(rgr_h_FM = (log(Height_cm_March)-log(Height_cm_February))/as.numeric((Date_March-Date_February)),
         rgr_h_MA = (log(Height_cm_April)-log(Height_cm_March))/as.numeric((Date_April-Date_March)),
         rgr_h_AM = (log(Height_cm_May)-log(Height_cm_April))/as.numeric((Date_May-Date_April)),
         rgr_h_MJ = (log(Height_cm_June)-log(Height_cm_May))/as.numeric((Date_June-Date_May)))

rgr_v_wide <- rgr3 %>% 
  select(Plant_ID,
         Date,
         Month,
         volume) %>% 
  filter(!is.na(volume)) %>%
  pivot_wider(id_cols = Plant_ID,
              names_from = Month,
              values_from = c(Date, volume)) %>% 
  mutate(rgr_v_FM = (log(volume_March)-log(volume_February))/as.numeric((Date_March-Date_February)),
         rgr_v_MA = (log(volume_April)-log(volume_March))/as.numeric((Date_April-Date_March)),
         rgr_v_AM = (log(volume_May)-log(volume_April))/as.numeric((Date_May-Date_April)),
         rgr_v_MJ = (log(volume_June)-log(volume_May))/as.numeric((Date_June-Date_May)))
  
# Join all three together but only keep rgrs, full join by Plant_ID

rgr_hv <- full_join(rgr_h_wide,rgr_v_wide,by = join_by(Plant_ID))

rgr_hv2 <- rgr_hv %>% 
  select(
    Plant_ID,
    rgr_h_FM,
    rgr_h_MA,
    rgr_h_AM,
    rgr_h_MJ,
    rgr_v_FM,
    rgr_v_MA,
    rgr_v_AM,
    rgr_v_MJ
  )

## Wooooo we did it!
## Now just need to address outliers and re-run
## For now you're done!
```

### Exploratory Graphs


### Select Reference times
One predictive variable of allometric slope might be relative growth rate timing and/or maximum relative growth rate.

